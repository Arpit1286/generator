/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.cloudwick.generator.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Customer extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Customer\",\"namespace\":\"com.cloudwick.generator.avro\",\"fields\":[{\"name\":\"CId\",\"type\":\"string\"},{\"name\":\"CName\",\"type\":\"string\"},{\"name\":\"CGender\",\"type\":\"string\"},{\"name\":\"CAge\",\"type\":\"int\"},{\"name\":\"CRegisterDate\",\"type\":\"long\"},{\"name\":\"CCountry\",\"type\":\"string\"},{\"name\":\"CFriendCount\",\"type\":\"int\"},{\"name\":\"CLifeTime\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence CId;
  @Deprecated public java.lang.CharSequence CName;
  @Deprecated public java.lang.CharSequence CGender;
  @Deprecated public int CAge;
  @Deprecated public long CRegisterDate;
  @Deprecated public java.lang.CharSequence CCountry;
  @Deprecated public int CFriendCount;
  @Deprecated public int CLifeTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Customer() {}

  /**
   * All-args constructor.
   */
  public Customer(java.lang.CharSequence CId, java.lang.CharSequence CName, java.lang.CharSequence CGender, java.lang.Integer CAge, java.lang.Long CRegisterDate, java.lang.CharSequence CCountry, java.lang.Integer CFriendCount, java.lang.Integer CLifeTime) {
    this.CId = CId;
    this.CName = CName;
    this.CGender = CGender;
    this.CAge = CAge;
    this.CRegisterDate = CRegisterDate;
    this.CCountry = CCountry;
    this.CFriendCount = CFriendCount;
    this.CLifeTime = CLifeTime;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return CId;
    case 1: return CName;
    case 2: return CGender;
    case 3: return CAge;
    case 4: return CRegisterDate;
    case 5: return CCountry;
    case 6: return CFriendCount;
    case 7: return CLifeTime;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: CId = (java.lang.CharSequence)value$; break;
    case 1: CName = (java.lang.CharSequence)value$; break;
    case 2: CGender = (java.lang.CharSequence)value$; break;
    case 3: CAge = (java.lang.Integer)value$; break;
    case 4: CRegisterDate = (java.lang.Long)value$; break;
    case 5: CCountry = (java.lang.CharSequence)value$; break;
    case 6: CFriendCount = (java.lang.Integer)value$; break;
    case 7: CLifeTime = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'CId' field.
   */
  public java.lang.CharSequence getCId() {
    return CId;
  }

  /**
   * Sets the value of the 'CId' field.
   * @param value the value to set.
   */
  public void setCId(java.lang.CharSequence value) {
    this.CId = value;
  }

  /**
   * Gets the value of the 'CName' field.
   */
  public java.lang.CharSequence getCName() {
    return CName;
  }

  /**
   * Sets the value of the 'CName' field.
   * @param value the value to set.
   */
  public void setCName(java.lang.CharSequence value) {
    this.CName = value;
  }

  /**
   * Gets the value of the 'CGender' field.
   */
  public java.lang.CharSequence getCGender() {
    return CGender;
  }

  /**
   * Sets the value of the 'CGender' field.
   * @param value the value to set.
   */
  public void setCGender(java.lang.CharSequence value) {
    this.CGender = value;
  }

  /**
   * Gets the value of the 'CAge' field.
   */
  public java.lang.Integer getCAge() {
    return CAge;
  }

  /**
   * Sets the value of the 'CAge' field.
   * @param value the value to set.
   */
  public void setCAge(java.lang.Integer value) {
    this.CAge = value;
  }

  /**
   * Gets the value of the 'CRegisterDate' field.
   */
  public java.lang.Long getCRegisterDate() {
    return CRegisterDate;
  }

  /**
   * Sets the value of the 'CRegisterDate' field.
   * @param value the value to set.
   */
  public void setCRegisterDate(java.lang.Long value) {
    this.CRegisterDate = value;
  }

  /**
   * Gets the value of the 'CCountry' field.
   */
  public java.lang.CharSequence getCCountry() {
    return CCountry;
  }

  /**
   * Sets the value of the 'CCountry' field.
   * @param value the value to set.
   */
  public void setCCountry(java.lang.CharSequence value) {
    this.CCountry = value;
  }

  /**
   * Gets the value of the 'CFriendCount' field.
   */
  public java.lang.Integer getCFriendCount() {
    return CFriendCount;
  }

  /**
   * Sets the value of the 'CFriendCount' field.
   * @param value the value to set.
   */
  public void setCFriendCount(java.lang.Integer value) {
    this.CFriendCount = value;
  }

  /**
   * Gets the value of the 'CLifeTime' field.
   */
  public java.lang.Integer getCLifeTime() {
    return CLifeTime;
  }

  /**
   * Sets the value of the 'CLifeTime' field.
   * @param value the value to set.
   */
  public void setCLifeTime(java.lang.Integer value) {
    this.CLifeTime = value;
  }

  /** Creates a new Customer RecordBuilder */
  public static com.cloudwick.generator.avro.Customer.Builder newBuilder() {
    return new com.cloudwick.generator.avro.Customer.Builder();
  }
  
  /** Creates a new Customer RecordBuilder by copying an existing Builder */
  public static com.cloudwick.generator.avro.Customer.Builder newBuilder(com.cloudwick.generator.avro.Customer.Builder other) {
    return new com.cloudwick.generator.avro.Customer.Builder(other);
  }
  
  /** Creates a new Customer RecordBuilder by copying an existing Customer instance */
  public static com.cloudwick.generator.avro.Customer.Builder newBuilder(com.cloudwick.generator.avro.Customer other) {
    return new com.cloudwick.generator.avro.Customer.Builder(other);
  }
  
  /**
   * RecordBuilder for Customer instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Customer>
    implements org.apache.avro.data.RecordBuilder<Customer> {

    private java.lang.CharSequence CId;
    private java.lang.CharSequence CName;
    private java.lang.CharSequence CGender;
    private int CAge;
    private long CRegisterDate;
    private java.lang.CharSequence CCountry;
    private int CFriendCount;
    private int CLifeTime;

    /** Creates a new Builder */
    private Builder() {
      super(com.cloudwick.generator.avro.Customer.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.cloudwick.generator.avro.Customer.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.CId)) {
        this.CId = data().deepCopy(fields()[0].schema(), other.CId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CName)) {
        this.CName = data().deepCopy(fields()[1].schema(), other.CName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CGender)) {
        this.CGender = data().deepCopy(fields()[2].schema(), other.CGender);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.CAge)) {
        this.CAge = data().deepCopy(fields()[3].schema(), other.CAge);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CRegisterDate)) {
        this.CRegisterDate = data().deepCopy(fields()[4].schema(), other.CRegisterDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CCountry)) {
        this.CCountry = data().deepCopy(fields()[5].schema(), other.CCountry);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.CFriendCount)) {
        this.CFriendCount = data().deepCopy(fields()[6].schema(), other.CFriendCount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.CLifeTime)) {
        this.CLifeTime = data().deepCopy(fields()[7].schema(), other.CLifeTime);
        fieldSetFlags()[7] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Customer instance */
    private Builder(com.cloudwick.generator.avro.Customer other) {
            super(com.cloudwick.generator.avro.Customer.SCHEMA$);
      if (isValidValue(fields()[0], other.CId)) {
        this.CId = data().deepCopy(fields()[0].schema(), other.CId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CName)) {
        this.CName = data().deepCopy(fields()[1].schema(), other.CName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.CGender)) {
        this.CGender = data().deepCopy(fields()[2].schema(), other.CGender);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.CAge)) {
        this.CAge = data().deepCopy(fields()[3].schema(), other.CAge);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.CRegisterDate)) {
        this.CRegisterDate = data().deepCopy(fields()[4].schema(), other.CRegisterDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.CCountry)) {
        this.CCountry = data().deepCopy(fields()[5].schema(), other.CCountry);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.CFriendCount)) {
        this.CFriendCount = data().deepCopy(fields()[6].schema(), other.CFriendCount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.CLifeTime)) {
        this.CLifeTime = data().deepCopy(fields()[7].schema(), other.CLifeTime);
        fieldSetFlags()[7] = true;
      }
    }

    /** Gets the value of the 'CId' field */
    public java.lang.CharSequence getCId() {
      return CId;
    }
    
    /** Sets the value of the 'CId' field */
    public com.cloudwick.generator.avro.Customer.Builder setCId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.CId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'CId' field has been set */
    public boolean hasCId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'CId' field */
    public com.cloudwick.generator.avro.Customer.Builder clearCId() {
      CId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'CName' field */
    public java.lang.CharSequence getCName() {
      return CName;
    }
    
    /** Sets the value of the 'CName' field */
    public com.cloudwick.generator.avro.Customer.Builder setCName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.CName = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'CName' field has been set */
    public boolean hasCName() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'CName' field */
    public com.cloudwick.generator.avro.Customer.Builder clearCName() {
      CName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'CGender' field */
    public java.lang.CharSequence getCGender() {
      return CGender;
    }
    
    /** Sets the value of the 'CGender' field */
    public com.cloudwick.generator.avro.Customer.Builder setCGender(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.CGender = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'CGender' field has been set */
    public boolean hasCGender() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'CGender' field */
    public com.cloudwick.generator.avro.Customer.Builder clearCGender() {
      CGender = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'CAge' field */
    public java.lang.Integer getCAge() {
      return CAge;
    }
    
    /** Sets the value of the 'CAge' field */
    public com.cloudwick.generator.avro.Customer.Builder setCAge(int value) {
      validate(fields()[3], value);
      this.CAge = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'CAge' field has been set */
    public boolean hasCAge() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'CAge' field */
    public com.cloudwick.generator.avro.Customer.Builder clearCAge() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'CRegisterDate' field */
    public java.lang.Long getCRegisterDate() {
      return CRegisterDate;
    }
    
    /** Sets the value of the 'CRegisterDate' field */
    public com.cloudwick.generator.avro.Customer.Builder setCRegisterDate(long value) {
      validate(fields()[4], value);
      this.CRegisterDate = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'CRegisterDate' field has been set */
    public boolean hasCRegisterDate() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'CRegisterDate' field */
    public com.cloudwick.generator.avro.Customer.Builder clearCRegisterDate() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'CCountry' field */
    public java.lang.CharSequence getCCountry() {
      return CCountry;
    }
    
    /** Sets the value of the 'CCountry' field */
    public com.cloudwick.generator.avro.Customer.Builder setCCountry(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.CCountry = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'CCountry' field has been set */
    public boolean hasCCountry() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'CCountry' field */
    public com.cloudwick.generator.avro.Customer.Builder clearCCountry() {
      CCountry = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'CFriendCount' field */
    public java.lang.Integer getCFriendCount() {
      return CFriendCount;
    }
    
    /** Sets the value of the 'CFriendCount' field */
    public com.cloudwick.generator.avro.Customer.Builder setCFriendCount(int value) {
      validate(fields()[6], value);
      this.CFriendCount = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'CFriendCount' field has been set */
    public boolean hasCFriendCount() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'CFriendCount' field */
    public com.cloudwick.generator.avro.Customer.Builder clearCFriendCount() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'CLifeTime' field */
    public java.lang.Integer getCLifeTime() {
      return CLifeTime;
    }
    
    /** Sets the value of the 'CLifeTime' field */
    public com.cloudwick.generator.avro.Customer.Builder setCLifeTime(int value) {
      validate(fields()[7], value);
      this.CLifeTime = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'CLifeTime' field has been set */
    public boolean hasCLifeTime() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'CLifeTime' field */
    public com.cloudwick.generator.avro.Customer.Builder clearCLifeTime() {
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    public Customer build() {
      try {
        Customer record = new Customer();
        record.CId = fieldSetFlags()[0] ? this.CId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.CName = fieldSetFlags()[1] ? this.CName : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.CGender = fieldSetFlags()[2] ? this.CGender : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.CAge = fieldSetFlags()[3] ? this.CAge : (java.lang.Integer) defaultValue(fields()[3]);
        record.CRegisterDate = fieldSetFlags()[4] ? this.CRegisterDate : (java.lang.Long) defaultValue(fields()[4]);
        record.CCountry = fieldSetFlags()[5] ? this.CCountry : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.CFriendCount = fieldSetFlags()[6] ? this.CFriendCount : (java.lang.Integer) defaultValue(fields()[6]);
        record.CLifeTime = fieldSetFlags()[7] ? this.CLifeTime : (java.lang.Integer) defaultValue(fields()[7]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
